{"version":3,"sources":["App.js","index.js"],"names":["neighboursPosition","createEmptyBoard","rows","i","push","Array","fill","App","useState","working","setWorking","board","setBoard","workingRef","useRef","current","startSimulation","useCallback","b","produce","boardCopy","j","neighbours","forEach","x","y","newI","newJ","setTimeout","console","log","onClick","from","Math","random","createRandomBoard","style","display","gridTemplateColumns","backgroundColor","map","col","newBoard","handleClick","width","height","boxSizing","border","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAMMA,EAAqB,CAC1B,EAAE,GAAI,GACN,CAAC,GAAI,GACL,CAAC,GAAI,GACL,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAGCC,EAAmB,WAExB,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAfE,GAecA,IAC/BD,EAAKE,KAAKC,MAjBO,IAiBWC,KAAK,IAElC,OAAOJ,GAkHOK,MArGf,WACC,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,WAClC,OAAOP,OADR,mBAAOU,EAAP,KAAcC,EAAd,KAUMC,EAAaC,iBAAOL,GAC1BI,EAAWE,QAAUN,EAErB,IAiBMO,EAAkBC,uBAAY,WAC9BJ,EAAWE,SAIhBH,GAAS,SAACM,GACT,OAAOC,YAAQD,GAAG,SAACE,GAClB,IADiC,IAAD,WACvBjB,GACR,IAF+B,eAEtBkB,GACR,IAAIC,EAAa,EACjBtB,EAAmBuB,SAAQ,YAAa,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KAChCC,EAAOvB,EAAIqB,EACXG,EAAON,EAAII,EAEhBC,GAAQ,GACRA,EA9EW,IA+EXC,GAAQ,GACRA,EAjFW,KAmFXL,GAAcJ,EAAEQ,GAAMC,OAIpBL,EAAa,GAAKA,EAAa,EAClCF,EAAUjB,GAAGkB,GAAK,EACI,IAAZH,EAAEf,GAAGkB,IAA2B,IAAfC,IAC3BF,EAAUjB,GAAGkB,GAAK,IAlBXA,EAAI,EAAGA,EAxEF,GAwEkBA,IAAM,EAA7BA,IADDlB,EAAI,EAAGA,EAtED,GAsEiBA,IAAM,EAA7BA,SAyBXyB,WAAWZ,EAAiB,MA9B3Ba,QAAQC,IAAI,YA+BX,IAEH,OACC,gCACC,wBAAQC,QAtDU,WACnBrB,GAAYD,GACPA,IACJI,EAAWE,SAAU,EACrBC,MAkDA,SAA+BP,EAAU,OAAS,UAClD,wBAAQsB,QAhDU,WACnBnB,GAAS,WACR,OAAOX,QA8CP,mBACA,wBAAQ8B,QA5CW,WACpBnB,GAAS,WACR,OAvCuB,WAEzB,IADA,IAAMV,EAAO,GACJC,EAAI,EAAGA,EAvBE,GAuBcA,IAC/BD,EAAKE,KACJC,MAAM2B,KAAK3B,MA1BK,KA0Bc,kBAAO4B,KAAKC,SAAW,GAAM,EAAI,MAGjE,OAAOhC,EAgCEiC,OA0CP,oBACA,qBACCC,MAAO,CACNC,QAAS,OACTC,oBAAoB,UAAD,OA3GL,GA2GK,UACnBC,gBAAiB,WAJnB,SAOE5B,EAAM6B,KAAI,SAACtC,EAAMC,GAAP,OACVD,EAAKsC,KAAI,SAACC,EAAKpB,GACd,OACC,qBACCU,QAAS,kBA9EI,SAAC5B,EAAGkB,GACvB,IAAMqB,EAAWvB,YAAQR,GAAO,SAACS,GAChCA,EAAUjB,GAAGkB,GAAKV,EAAMR,GAAGkB,GAAK,EAAI,KAErCT,EAAS8B,GA0EYC,CAAYxC,EAAGkB,IAE9Be,MAAO,CACNQ,MAAO,GACPC,OAAQ,GACRC,UAAW,aACXC,OAAQ,oBACRR,gBAAiB5B,EAAMR,GAAGkB,GAAK,UAAY,OAR7C,UAESlB,EAFT,YAEckB,gBClHrB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32634279.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport produce from 'immer';\nimport './css/index.css';\nconst colsNumber = 50;\nconst rowsNumber = 50;\n\nconst neighboursPosition = [\n\t[-1, -1],\n\t[0, -1],\n\t[1, -1],\n\t[-1, 0],\n\t[1, 0],\n\t[-1, 1],\n\t[0, 1],\n\t[1, 1],\n];\n\nconst createEmptyBoard = () => {\n\tconst rows = [];\n\tfor (let i = 0; i < rowsNumber; i++) {\n\t\trows.push(Array(colsNumber).fill(0));\n\t}\n\treturn rows;\n};\n\nconst createRandomBoard = () => {\n\tconst rows = [];\n\tfor (let i = 0; i < rowsNumber; i++) {\n\t\trows.push(\n\t\t\tArray.from(Array(colsNumber), () => (Math.random() > 0.5 ? 1 : 0)),\n\t\t);\n\t}\n\treturn rows;\n};\n\nfunction App() {\n\tconst [working, setWorking] = useState(false);\n\tconst [board, setBoard] = useState(() => {\n\t\treturn createEmptyBoard();\n\t});\n\tconst handleClick = (i, j) => {\n\t\tconst newBoard = produce(board, (boardCopy) => {\n\t\t\tboardCopy[i][j] = board[i][j] ? 0 : 1;\n\t\t});\n\t\tsetBoard(newBoard);\n\t};\n\n\tconst workingRef = useRef(working);\n\tworkingRef.current = working;\n\n\tconst handleStart = () => {\n\t\tsetWorking(!working);\n\t\tif (!working) {\n\t\t\tworkingRef.current = true;\n\t\t\tstartSimulation();\n\t\t}\n\t};\n\tconst handleClear = () => {\n\t\tsetBoard(() => {\n\t\t\treturn createEmptyBoard();\n\t\t});\n\t};\n\tconst handleRandom = () => {\n\t\tsetBoard(() => {\n\t\t\treturn createRandomBoard();\n\t\t});\n\t};\n\tconst startSimulation = useCallback(() => {\n\t\tif (!workingRef.current) {\n\t\t\tconsole.log('koniec');\n\t\t\treturn;\n\t\t}\n\t\tsetBoard((b) => {\n\t\t\treturn produce(b, (boardCopy) => {\n\t\t\t\tfor (let i = 0; i < rowsNumber; i++) {\n\t\t\t\t\tfor (let j = 0; j < colsNumber; j++) {\n\t\t\t\t\t\tlet neighbours = 0;\n\t\t\t\t\t\tneighboursPosition.forEach(([x, y]) => {\n\t\t\t\t\t\t\tconst newI = i + x;\n\t\t\t\t\t\t\tconst newJ = j + y;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewI >= 0 &&\n\t\t\t\t\t\t\t\tnewI < rowsNumber &&\n\t\t\t\t\t\t\t\tnewJ >= 0 &&\n\t\t\t\t\t\t\t\tnewJ < colsNumber\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tneighbours += b[newI][newJ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (neighbours < 2 || neighbours > 3) {\n\t\t\t\t\t\t\tboardCopy[i][j] = 0;\n\t\t\t\t\t\t} else if (b[i][j] === 0 && neighbours === 3) {\n\t\t\t\t\t\t\tboardCopy[i][j] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tsetTimeout(startSimulation, 250);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={handleStart}>{working ? 'stop' : 'start'}</button>\n\t\t\t<button onClick={handleClear}>clear</button>\n\t\t\t<button onClick={handleRandom}>random</button>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\tgridTemplateColumns: `repeat(${colsNumber},20px)`,\n\t\t\t\t\tbackgroundColor: '#2C2C2C',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{board.map((rows, i) =>\n\t\t\t\t\trows.map((col, j) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => handleClick(i, j)}\n\t\t\t\t\t\t\t\tkey={`${i}-${j}`}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 20,\n\t\t\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\t\tborder: '1px solid #212121',\n\t\t\t\t\t\t\t\t\tbackgroundColor: board[i][j] ? '#e65e8b' : null,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}