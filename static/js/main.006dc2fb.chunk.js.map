{"version":3,"sources":["functions/createEmptyBoard.js","functions/createRandomBoard.js","functions/checkingWidth.js","components/Board.js","components/About.js","components/ControlButtons.js","components/RangeButton.js","functions/neighboursPosition.js","App.js","index.js"],"names":["createEmptyBoard","rowsNumber","colsNumber","rows","i","push","Array","fill","createRandomBoard","percentValue","from","Math","random","checkingWidth","window","innerWidth","floor","Board","board","handleClick","countCurrent","width","className","style","display","gridTemplateColumns","backgroundColor","map","col","j","onClick","height","boxSizing","border","About","href","target","rel","ControlButtons","handleClear","handleStart","working","RangeButton","handleRandom","handleChange","type","onChange","value","min","max","neighboursPosition","App","useState","setWorking","setPercentValue","windowWidth","setWindowWidth","setRowsNumber","setColsNumber","count","useRef","setBoard","workingRef","current","resizeListener","useCallback","useEffect","addEventListener","removeEventListener","startSimulation","b","produce","boardCopy","neighbours","forEach","x","y","newI","newJ","setTimeout","e","newBoard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.006dc2fb.chunk.js","sourcesContent":["const createEmptyBoard = (rowsNumber, colsNumber) => {\r\n\tconst rows = [];\r\n\tfor (let i = 0; i < rowsNumber; i++) {\r\n\t\trows.push(Array(colsNumber).fill(0));\r\n\t}\r\n\treturn rows;\r\n};\r\n\r\nexport default createEmptyBoard;\r\n","const createRandomBoard = (rowsNumber, colsNumber, percentValue) => {\r\n\tconst rows = [];\r\n\tfor (let i = 0; i < rowsNumber; i++) {\r\n\t\trows.push(\r\n\t\t\tArray.from(Array(colsNumber), () =>\r\n\t\t\t\tMath.random() > percentValue / 100 ? 0 : 1,\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\treturn rows;\r\n};\r\n\r\nexport default createRandomBoard;\r\n","const checkingWidth = () => {\r\n\tif (window.innerWidth < 660) {\r\n\t\treturn Math.floor((window.innerWidth - 20) / 25);\r\n\t} else {\r\n\t\treturn 25;\r\n\t}\r\n};\r\n\r\nexport default checkingWidth;\r\n","const Board = ({ board, handleClick, colsNumber,countCurrent }) => {\r\n\tconst width = colsNumber * 25;\r\n\treturn (\r\n\t\t<div\r\n      className=\"game__board\"\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridTemplateColumns: `repeat(${countCurrent},25px)`,\r\n\t\t\t\tbackgroundColor: '#424242',\r\n\t\t\t\twidth: width,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{board.map((rows, i) =>\r\n\t\t\t\trows.map((col, j) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => handleClick(i, j)}\r\n\t\t\t\t\t\t\tkey={`${i}-${j}`}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: 25,\r\n\t\t\t\t\t\t\t\theight: 25,\r\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\r\n\t\t\t\t\t\t\t\tborder: '1px solid #212121',\r\n\t\t\t\t\t\t\t\tbackgroundColor: board[i][j] ? '#e65e8b' : null,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}),\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Board;\r\n","const About = () => {\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\r\n\t\t\ttarget=\"_blank\"\r\n\t\t\trel=\"noreferrer\"\r\n\t\t>\r\n\t\t\t<button>About</button>\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default About\r\n","const ControlButtons = ({ handleClear, handleStart, working }) => {\r\n\treturn (\r\n\t\t<div className=\"game__buttons--control\">\r\n\t\t\t<button onClick={handleClear}>Clear</button>\r\n\t\t\t<button onClick={handleStart}>{working ? 'Stop' : 'Start'}</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ControlButtons;\r\n","const RangeButton = ({ percentValue, handleRandom, handleChange }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"game__buttonsRange--bar\">\r\n\t\t\t\t<span>{percentValue}%</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={percentValue}\r\n\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span>100%</span>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"game__buttonsRange--button slider\" onClick={handleRandom}>\r\n\t\t\t\tRandom\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RangeButton;\r\n","export const neighboursPosition = [\r\n\t[-1, -1],\r\n\t[0, -1],\r\n\t[1, -1],\r\n\t[-1, 0],\r\n\t[1, 0],\r\n\t[-1, 1],\r\n\t[0, 1],\r\n\t[1, 1],\r\n];\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport produce from 'immer';\nimport './css/index.css';\nimport createEmptyBoard from './functions/createEmptyBoard';\nimport createRandomBoard from './functions/createRandomBoard';\nimport checkingWidth from './functions/checkingWidth';\nimport Board from './components/Board';\nimport About from './components/About';\nimport ControlButtons from './components/ControlButtons';\nimport RangeButton from './components/RangeButton';\nimport { neighboursPosition } from './functions/neighboursPosition';\n\nfunction App() {\n\tconst [working, setWorking] = useState(false);\n\tconst [percentValue, setPercentValue] = useState(50);\n\tconst [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n\tconst [rowsNumber, setRowsNumber] = useState(checkingWidth);\n\tconst [colsNumber, setColsNumber] = useState(checkingWidth);\n\tconst count = useRef(rowsNumber);\n\tconst [board, setBoard] = useState(() => {\n\t\treturn createEmptyBoard(rowsNumber, colsNumber);\n\t});\n\n\tconst workingRef = useRef(working);\n\tworkingRef.current = working;\n\tconst resizeListener = useCallback(() => {\n\t\tif (window.innerWidth < 660) {\n\t\t\tcount.current = Math.floor((window.innerWidth - 20) / 25);\n\t\t\tsetWindowWidth(window.innerWidth);\n\t\t\tsetRowsNumber(checkingWidth);\n\t\t\tsetColsNumber(checkingWidth);\n\t\t\tsetBoard(() => {\n\t\t\t\treturn createEmptyBoard(count.current, count.current);\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', resizeListener);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', resizeListener);\n\t\t};\n\t}, [windowWidth, resizeListener]);\n\n\tconst handleClick = (i, j) => {\n\t\tconst newBoard = produce(board, (boardCopy) => {\n\t\t\tboardCopy[i][j] = board[i][j] ? 0 : 1;\n\t\t});\n\t\tsetBoard(newBoard);\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetPercentValue(e.target.value);\n\t};\n\n\tconst handleStart = () => {\n\t\tsetWorking(!working);\n\t\tif (!working) {\n\t\t\tworkingRef.current = true;\n\t\t\tstartSimulation();\n\t\t}\n\t};\n\tconst handleClear = () => {\n\t\tsetBoard(() => {\n\t\t\treturn createEmptyBoard(rowsNumber, colsNumber);\n\t\t});\n\t};\n\tconst handleRandom = () => {\n\t\tsetBoard(() => {\n\t\t\treturn createRandomBoard(rowsNumber, colsNumber, percentValue);\n\t\t});\n\t};\n\n\t//Function starts simulation and creats mutating board\n\tconst startSimulation = useCallback(() => {\n\t\tif (!workingRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetBoard((b) => {\n\t\t\treturn produce(b, (boardCopy) => {\n\t\t\t\tfor (let i = 0; i < rowsNumber; i++) {\n\t\t\t\t\tfor (let j = 0; j < colsNumber; j++) {\n\t\t\t\t\t\tlet neighbours = 0;\n\t\t\t\t\t\tneighboursPosition.forEach(([x, y]) => {\n\t\t\t\t\t\t\tconst newI = i + x;\n\t\t\t\t\t\t\tconst newJ = j + y;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewI >= 0 &&\n\t\t\t\t\t\t\t\tnewI < rowsNumber &&\n\t\t\t\t\t\t\t\tnewJ >= 0 &&\n\t\t\t\t\t\t\t\tnewJ < colsNumber\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tneighbours += b[newI][newJ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (neighbours < 2 || neighbours > 3) {\n\t\t\t\t\t\t\tboardCopy[i][j] = 0;\n\t\t\t\t\t\t} else if (b[i][j] === 0 && neighbours === 3) {\n\t\t\t\t\t\t\tboardCopy[i][j] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tsetTimeout(startSimulation, 200);\n\t}, [colsNumber, rowsNumber]);\n\n\treturn (\n\t\t<div className=\"game__container\" style={{ width: colsNumber * 25 }}>\n\t\t\t<h1>Game of life</h1>\n\t\t\t<div className=\"game__buttons\">\n\t\t\t\t<About />\n\n\t\t\t\t<RangeButton\n\t\t\t\t\thandleRandom={handleRandom}\n\t\t\t\t\tpercentValue={percentValue}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<ControlButtons\n\t\t\t\t\thandleClear={handleClear}\n\t\t\t\t\thandleStart={handleStart}\n\t\t\t\t\tworking={working}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Board\n\t\t\t\tboard={board}\n\t\t\t\thandleClick={handleClick}\n\t\t\t\tcountCurrent={count.current}\n\t\t\t\tcolsNumber={colsNumber}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}